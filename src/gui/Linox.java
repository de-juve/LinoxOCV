package gui;

import gui.dialog.ParameterJPanel;
import gui.menu.LinoxImageStore;
import gui.menu.LinoxMenuStore;
import net.miginfocom.swing.MigLayout;
import org.opencv.core.Core;

import javax.swing.*;
import java.awt.*;


public class Linox extends JFrame {
    private volatile static Linox linox;
    //GUI
    private JPanel mainPanel;
    private LinoxImageStore imageStore;
    private LinoxMenuStore menuStore;
    private StatusBar statusBar;
    private ParameterJPanel parameterPanel;

    private Linox() throws HeadlessException {
        super( "Linox" );

        mainPanel = new JPanel();
        mainPanel.setLayout(new MigLayout("",
                "[grow][][grow]",
                ""));
        mainPanel.setMaximumSize( new Dimension( 1024, 978 ) );
        mainPanel.setMinimumSize( new Dimension( 200, 100 ) );

        menuStore = new LinoxMenuStore();
        imageStore = new LinoxImageStore();
        statusBar = new StatusBar();

     //   $$$setupUI$$$();
        createUIComponents();
        linox = this;
        System.loadLibrary( Core.NATIVE_LIBRARY_NAME );
    }

    public static Linox getInstance() {
        if ( linox == null ) {
            synchronized ( Linox.class ) {
                if ( linox == null ) {
                    linox = new Linox();
                }
            }
        }
        return linox;
    }

    public static void main( String[] args ) {
        SwingUtilities.invokeLater( new Runnable() {
            public void run() {
                final Linox frame = new Linox();
                frame.pack();
                // Mark for display in the center of the screen
                frame.setLocationRelativeTo( null );
           //     frame.setContentPane( Linox.getInstance().$$$getRootComponent$$$() );
                frame.setContentPane( Linox.getInstance().getRootComponent());
                frame.setSize(640, 480);
                // Exit application when frame is closed.
                frame.setDefaultCloseOperation( WindowConstants.EXIT_ON_CLOSE );
                frame.setVisible( true );
            }
        } );
    }

    public JPanel getRootComponent() {
        return this.mainPanel;
    }

    private void createUIComponents() {
        mainPanel.add(menuStore, "dock north, growx, h 20!");
        mainPanel.add(imageStore, "");
        mainPanel.add(statusBar, "dock south, growx");

/*

        mainPanel.add( new LinoxMenuStore(), BorderLayout.PAGE_START, 0 );

        mainPanel.add( new LinoxImageStore(), BorderLayout.CENTER, 1 );

        mainPanel.add( new StatusBar(), BorderLayout.PAGE_END, 2 );*/
    }

//    /**
//     * Method generated by IntelliJ IDEA GUI Designer
//     * >>> IMPORTANT!! <<<
//     * DO NOT edit this method OR call it in your code!
//     *
//     * @noinspection ALL
//     */
//    private void $$$setupUI$$$() {
//        mainPanel = new JPanel();
//      //  mainPanel.setLayout( new MigLayout() );
//        mainPanel.setMaximumSize( new Dimension( 1024, 978 ) );
//        mainPanel.setMinimumSize( new Dimension( 200, 100 ) );
//        // mainPanel.setPreferredSize(new Dimension(200, 100));
//    }

//    /**
//     * @noinspection ALL
//     */
//    public JComponent $$$getRootComponent$$$() {
//        return mainPanel;
//    }

    public void showStatus( String s ) {
        getStatusBar().setStatus( s );
    }

    public JMenuBar getMenuStore() {
        return menuStore;
    }

    public LinoxImageStore getImageStore() {
        return imageStore;
    }

    public StatusBar getStatusBar() {
        return statusBar;
    }

    public void addParameterJPanel( ParameterJPanel panel ) {
        parameterPanel = panel;
        mainPanel.add(parameterPanel);
       // mainPanel.add( panel, BorderLayout.EAST, 3 );
    }

    public void removeParameterJPanel() {
        mainPanel.remove(parameterPanel);
        /*if ( mainPanel.getComponents().length > 3 ) {
            mainPanel.remove( 3 );
        }*/
    }

}

